import { OpenAI } from 'openai';
import { AIProvider, ContentType } from './index';
import { buildPrompt } from './prompt';

export class OpenAIProvider implements AIProvider {
  async generateContent(jobDescription: string, type: ContentType, userInfo: any): Promise<string> {
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) throw new Error('OPENAI_API_KEY environment variable not set.');
    const openai = new OpenAI({ apiKey });
    const prompt = buildPrompt(userInfo, jobDescription, type);
    const response = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        { role: 'system', content: 'You are a helpful assistant.' },
        { role: 'user', content: prompt.toString() },
      ],
      max_tokens: 1500,
      temperature: 0.7,
    });
    const text = response.choices?.[0]?.message?.content;
    if (!text) throw new Error('No content generated by OpenAI.');
    return text.trim();
  }
}

export async function validateOpenAIKey(key: string): Promise<boolean> {
  if (!key) return true;
  try {
    const openai = new OpenAI({ apiKey: key });
    await openai.models.list();
    return true;
  } catch {
    return false;
  }
}
