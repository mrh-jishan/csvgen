import fetch from 'node-fetch';
import { AIProvider, ContentType } from './index';
import { buildPrompt } from './prompt';

export class OpenAIProvider implements AIProvider {
  async generateContent(
    jobDescription: string,
    type: ContentType,
    userInfo: any,
  ): Promise<string> {
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) throw new Error('OPENAI_API_KEY environment variable not set.');

    // Use shared prompt
    const prompt = buildPrompt(userInfo, jobDescription, type);

    const apiUrl = 'https://api.openai.com/v1/chat/completions';
    const payload = {
      model: 'gpt-3.5-turbo',
      messages: [
        { role: 'system', content: 'You are a helpful assistant.' },
        { role: 'user', content: prompt },
      ],
      max_tokens: 1500,
      temperature: 0.7,
    };

    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify(payload),
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(
        `OpenAI API error: ${response.status} ${response.statusText} - ${errorData.error?.message || 'Unknown error'}`,
      );
    }

    const result = await response.json();
    const text = result.choices?.[0]?.message?.content;
    if (!text) throw new Error('No content generated by OpenAI.');
    return text.trim();
  }
}
